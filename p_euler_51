#include <iostream>
#include <bits/stdc++.h>
using namespace std;
bool isPrime(int n) 
{ 
    if (n <= 1)  return false; 
    if (n <= 3)  return true; 
    if (n%2 == 0 || n%3 == 0) return false; 
    for (int i=5; i*i<=n; i=i+6) 
        if (n%i == 0 || n%(i+2) == 0) 
           return false; 
    return true; 
} 
void solve(){
	for (int i=3; ;i+=2){
		if (isPrime(i)){
			string s = to_string(i);
			char min_digit = *min_element(s.begin(),s.end());
			if (min_digit <= '2'){
				int mask = 0;
				for (char c:s){
					mask = mask*10 + ((c==min_digit) ? 1:0);
				}
				vector <int> family{i};
				int prob = i;
				for (int j = min_digit -'0'+1;j<=9;++j){
					prob += mask;
					if (isPrime(prob)){
						family.push_back(prob);
					}
				}
				if (family.size() == 8){
					cout << family[0] << endl;
					cout << "Family of 8 member primes:";
					for (const auto &member : family){
						cout << member << "  ";
					}
					cout << endl;
					return ;
				}
			}
		}
	}
}
int main(){
	solve();

}
